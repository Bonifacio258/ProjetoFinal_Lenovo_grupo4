{"ast":null,"code":"// Dados dos banners do HeroBanner\nexport const bannerData = [{\n  id: 1,\n  image: \"https://p2-ofp.static.pub/ShareResource/ww/img/homepage-banners/lenovo-mwc-2025-hpb-teaser-desktop.jpg\",\n  // Substitua pelo URL real da imagem oficial\n  alt: \"Promoção Lenovo\",\n  headline: \"Descubra as Ofertas Exclusivas\",\n  subhead: \"Tecnologia de ponta para você\",\n  ctaText: \"Ver ofertas\",\n  ctaLink: \"/ofertas\",\n  logo: \"https://www.lenovo.com/medias/lenovo-logo.png\"\n}];\n\n// Funções utilitárias para banners\nexport const getBannerById = id => {\n  return bannerData.find(banner => banner.id === id);\n};\nexport const getActiveBanners = () => {\n  // Aqui você pode adicionar lógica para filtrar banners ativos\n  // Por exemplo, baseado em datas ou status\n  return bannerData;\n};\nexport const getBannersByCategory = category => {\n  // Aqui você pode filtrar banners por categoria\n  return bannerData.filter(banner => banner.subhead.toLowerCase().includes(category.toLowerCase()));\n};","map":{"version":3,"names":["bannerData","id","image","alt","headline","subhead","ctaText","ctaLink","logo","getBannerById","find","banner","getActiveBanners","getBannersByCategory","category","filter","toLowerCase","includes"],"sources":["C:/Users/Gaspar/OneDrive/Documentos/Área de Trabalho/lenovo-clone/src/data/bannerData.js"],"sourcesContent":["// Dados dos banners do HeroBanner\r\nexport const bannerData = [\r\n    {\r\n        id: 1,\r\n        image: \"https://p2-ofp.static.pub/ShareResource/ww/img/homepage-banners/lenovo-mwc-2025-hpb-teaser-desktop.jpg\", // Substitua pelo URL real da imagem oficial\r\n        alt: \"Promoção Lenovo\",\r\n        headline: \"Descubra as Ofertas Exclusivas\",\r\n        subhead: \"Tecnologia de ponta para você\",\r\n        ctaText: \"Ver ofertas\",\r\n        ctaLink: \"/ofertas\",\r\n        logo: \"https://www.lenovo.com/medias/lenovo-logo.png\"\r\n    },\r\n        \r\n            ];\r\n\r\n// Funções utilitárias para banners\r\nexport const getBannerById = (id) => {\r\n    return bannerData.find(banner => banner.id === id);\r\n};\r\n\r\nexport const getActiveBanners = () => {\r\n    // Aqui você pode adicionar lógica para filtrar banners ativos\r\n    // Por exemplo, baseado em datas ou status\r\n    return bannerData;\r\n};\r\n\r\nexport const getBannersByCategory = (category) => {\r\n    // Aqui você pode filtrar banners por categoria\r\n    return bannerData.filter(banner =>\r\n            banner.subhead.toLowerCase().includes(category.toLowerCase())\r\n            );\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,CACtB;EACIC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,wGAAwG;EAAE;EACjHC,GAAG,EAAE,iBAAiB;EACtBC,QAAQ,EAAE,gCAAgC;EAC1CC,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE,aAAa;EACtBC,OAAO,EAAE,UAAU;EACnBC,IAAI,EAAE;AACV,CAAC,CAEQ;;AAEb;AACA,OAAO,MAAMC,aAAa,GAAIR,EAAE,IAAK;EACjC,OAAOD,UAAU,CAACU,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,EAAE,KAAKA,EAAE,CAAC;AACtD,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;EAClC;EACA;EACA,OAAOZ,UAAU;AACrB,CAAC;AAED,OAAO,MAAMa,oBAAoB,GAAIC,QAAQ,IAAK;EAC9C;EACA,OAAOd,UAAU,CAACe,MAAM,CAACJ,MAAM,IACvBA,MAAM,CAACN,OAAO,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,QAAQ,CAACE,WAAW,CAAC,CAAC,CAC5D,CAAC;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}